apiVersion: apps/v1
{{ if .Values.distributed.enabled }}
kind: StatefulSet
{{ else }}
kind: Deployment
{{ end }}
metadata:
  name: {{ include "buildbuddy.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "buildbuddy.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "buildbuddy.chart" . }}
    {{- if .Values.extraPodLabels }}
    {{- .Values.extraPodLabels | toYaml | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
{{ if eq .Values.distributed.enabled true }}
  podManagementPolicy: {{ .Values.distributed.podManagementPolicy }}
{{ else }}
  strategy:
    type: RollingUpdate
{{ end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "buildbuddy.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.internalMetricsPort }}"
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{- if .Values.extraPodAnnotations }}
        {{- .Values.extraPodAnnotations | toYaml | nindent 8 }}
        {{- end }}

      labels:
        app.kubernetes.io/name: {{ include "buildbuddy.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "buildbuddy.chart" . }}
        {{- if .Values.extraPodLabels }}
        {{- .Values.extraPodLabels | toYaml | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.securityContext }}
      securityContext:
      {{- .Values.securityContext | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
      {{- if .Values.mysql.enabled }}
      - name: "init-mysql"
        image: "{{ .Values.initContainerImage.repository }}:{{ .Values.initContainerImage.tag }}"
        imagePullPolicy: {{ .Values.initContainerImage.imagePullPolicy }}
        command: ["sh", "-c", "until curl --max-time 10 http://{{ .Release.Name }}-mysql:3306; do echo waiting for {{ .Release.Name }}-mysql; sleep 5; done;"]
      {{- end }}
      {{- if .Values.extraInitContainers }}
      {{- .Values.extraInitContainers | toYaml | nindent 6 }}
      {{- end }}
      {{- if .Values.nodeSelector}}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          args:
          {{- if .Values.args }}
            {{- .Values.args | toYaml | nindent 12 }}
          {{- end }}
          resources:
          {{- if .Values.resources }}
            {{- .Values.resources | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: MY_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{ if .Values.distributed.enabled }}
            - name: MY_HOSTNAME
              value: "$(MY_NAME).{{ include "buildbuddy.name" . }}-headless.$(MY_NAMESPACE).svc.cluster.local"
          {{ else }}
            - name: MY_HOSTNAME
              value: "$(MY_NAME)"
          {{- end }}
            - name: MY_CLUSTER_HOSTNAME
              value: "$(MY_HOSTNAME)"
          {{- if .Values.extraEnvVars }}
            {{- .Values.extraEnvVars | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalHTTPPort }}
            - name: grpc
              containerPort: {{ .Values.service.internalGRPCPort }}
            {{ if .Values.service.internalDistPort }}
            - name: dist
              containerPort: {{ .Values.service.internalDistPort }}
            {{ end }}
            {{ if .Values.service.internalHTTPSPort }}
            - name: https
              containerPort: {{ .Values.service.internalHTTPSPort }}
            {{ end }}
            {{ if .Values.service.internalGRPCSPort }}
            - name: grpcs
              containerPort: {{ .Values.service.internalGRPCSPort }}
            {{ end }}
            {{ if .Values.service.internalMetricsPort }}
            - name: metrics
              containerPort: {{ .Values.service.internalMetricsPort }}
            {{ end }}
          livenessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http
              httpHeaders:
                - name: server-type
                  value: buildbuddy-server
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
              httpHeaders:
                - name: server-type
                  value: buildbuddy-server
          volumeMounts:
            {{ if .Values.distributed.enabled }}
            - mountPath: /data
              name: buildbuddy-data-pvc
            {{ else }}
            - mountPath: /data
              name: data
            {{ end }}
            - mountPath: /config.yaml
              name: config
              subPath: config.yaml
            {{- if .Values.extraVolumeMounts -}}
            {{ .Values.extraVolumeMounts | toYaml | nindent 12 }}
            {{- end }}
            {{- if and .Values.certmanager.enabled .Values.ingress.controller.extraVolumeMounts -}}
            {{ .Values.ingress.controller.extraVolumeMounts | toYaml | nindent 12 }}
            {{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ include "buildbuddy.fullname" . }}-config
        {{ if not .Values.distributed.enabled }}
        - name: data
          {{ if .Values.disk.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.disk.data.existingClaim | default (include "buildbuddy.fullname" .) }}
          {{ else }}
          emptyDir: {}
          {{ end }}
        {{ end }}
        {{- if .Values.extraVolumes -}}
        {{ .Values.extraVolumes | toYaml | nindent 8 }}
        {{- end }}
        {{- if and .Values.certmanager.enabled .Values.ingress.controller.extraVolumes -}}
        {{ .Values.ingress.controller.extraVolumes | toYaml | nindent 8 }}
        {{- end }}
{{ if .Values.distributed.enabled }}
  serviceName: {{ include "buildbuddy.name" . }}-headless
  volumeClaimTemplates:
    - metadata:
        name: buildbuddy-data-pvc
      spec:
{{ if .Values.distributed.ssd }}
        storageClassName: ssd
{{ end }}
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.distributed.size }}
{{ end }}
{{ if .Values.distributed.ssd }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ssd
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
allowVolumeExpansion: true
{{ end }}
